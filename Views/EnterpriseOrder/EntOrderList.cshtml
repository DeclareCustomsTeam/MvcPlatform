<link href="/js/Extjs42/resources/css/ext-all-gray.css" rel="stylesheet" type="text/css" />
<script src="/js/Extjs42/bootstrap.js" type="text/javascript"></script>
<link href="/css/font-awesome/css/font-awesome.min.css" rel="stylesheet" />
<script src="/js/pan.js" type="text/javascript"></script>
<script src="~/js/commondata.js"></script>
<script type="text/javascript" src="/js/upload/plupload.full.min.js"></script>
<script src="~/Views/EnterpriseOrder/createwinjs.js"></script>
<script type="text/javascript">
    var gridpanel;
    var common_data_sbgq = [], common_data_sbfs = [], common_data_adminurl = "";
    var store_busitype;
    var store_STATUS = Ext.create('Ext.data.JsonStore', {
        fields: ['CODE', 'NAME'],
        data: [{ "CODE": 5, "NAME": "草稿" },{ "CODE": 10, "NAME": "已提交" },{ "CODE": 15, "NAME": "已受理" }]
    });
    Ext.onReady(function () {
        store_busitype = Ext.create('Ext.data.JsonStore', {
            fields: ['CODE', 'NAME'],
            data: common_data_busitype
        });
        Ext.Ajax.request({
            url: "/Common/Ini_Base_Data",
            success: function (response, opts) {
                var commondata = Ext.decode(response.responseText);
                common_data_sbgq = commondata.sbgq;//申报关区   for win 窗口使用
                common_data_sbfs = commondata.sbfs;//申报方式   for win 窗口使用
                common_data_adminurl = commondata.adminurl;//文件服务器URL
                //查询区域
                initSearch();
                var store_Trade = Ext.create('Ext.data.JsonStore', {
                    fields: ['ID', 'FILERECEVIEUNITCODE', 'FILERECEVIEUNITNAME', 'FILEDECLAREUNITCODE', 'FILEDECLAREUNITNAME',
                        'BUSITYPEID', 'CUSTOMDISTRICTCODE', 'CUSTOMDISTRICTNAME', 'REPWAYID', 'NEWSTATUS',
                         'CODE', 'CREATEID', 'CREATENAME', 'CREATETIME', 'ASSOCIATENO', 'ORDERCODE', 'ENTERPRISECODE', 'ENTERPRISENAME', 'ACCEPTID', 'ACCEPTNAME',
                         'ACCEPTTIME', 'UNITCODE', 'CREATEMODE', 'REMARK'],
                    pageSize: 20,
                    proxy: {
                        type: 'ajax',
                        url: '/EnterpriseOrder/loadOrderList',
                        reader: {
                            root: 'rows',
                            type: 'json',
                            totalProperty: 'total'
                        }
                    },
                    autoLoad: true,
                    listeners: {
                        beforeload: function () {
                            store_Trade.getProxy().extraParams = {
                                FILERECEVIEUNIT: Ext.getCmp('FILERECEVIEUNIT_S').getValue(),
                                FILEDECLAREUNIT: Ext.getCmp("FILEDECLAREUNIT_S").getValue(),
                                CODE: Ext.getCmp('CODE_S').getValue(),
                                STARTDATE: Ext.Date.format(Ext.getCmp("start_date").getValue(), 'Y-m-d H:i:s'),
                                ENDDATE: Ext.Date.format(Ext.getCmp("end_date").getValue(), 'Y-m-d H:i:s')
                            }
                        }
                    }
                })
                var pgbar = Ext.create('Ext.toolbar.Paging', {
                    displayMsg: '显示 {0} - {1} 条,共计 {2} 条',
                    store: store_Trade,
                    id: 'pgbar',
                    displayInfo: true
                })
                gridpanel = Ext.create('Ext.grid.Panel', {
                    renderTo: "appConId",
                    store: store_Trade,
                    height: 500,
                    selModel: { selType: 'checkboxmodel' },
                    bbar: pgbar,
                    enableColumnHide: false,
                    columns: [
                    { xtype: 'rownumberer', width: 35, locked: true },
                    { header: 'ID', dataIndex: 'ID', hidden: true, locked: true },
                    { header: '文件统一编号', dataIndex: 'UNITCODE', width: 150, locked: true },
                    { header: '企业|对应编号', dataIndex: 'CODE', width: 120, locked: true },
                    { header: '文件接收单位', dataIndex: 'FILERECEVIEUNITNAME', width: 200, locked: true },
                    { header: '文件申报单位', dataIndex: 'FILEDECLAREUNITNAME', width: 200, locked: true },
                    { header: '业务类型', dataIndex: 'BUSITYPEID', width: 100, renderer: render, locked: true },
                    { header: '申报关区', dataIndex: 'CUSTOMDISTRICTCODE', width: 70 },
                    { header: '状态', dataIndex: 'NEWSTATUS', width: 70, renderer: render },
                    { header: '创建时间', dataIndex: 'CREATETIME', width: 140, locked: true },
                    { header: '生成方式', dataIndex: 'CREATEMODE', width: 120 },
                    { header: '备注', dataIndex: 'REMARK', width: 150 }
                    ],
                    //listeners:
                    //{
                    //    'itemdblclick': function (view, record, item, index, e) {
                    //        addwin(record.data.ID);
                    //    }
                    //},
                    viewConfig: {
                        enableTextSelection: true
                    }
                })
            }
        });
    });

    function Open() {
        addwin("");
    }
    function initSearch() {
        //文件接收单位
        var field_FILERECEVIEUNIT_S = Ext.create('Ext.form.field.Text', {
            id: 'FILERECEVIEUNIT_S',
            name: 'FILERECEVIEUNIT_S',
            margin: 0,
            flex: .85,
        })

        var cont_wjjsdw_S = Ext.create('Ext.form.FieldContainer', {
            fieldLabel: '文件接收单位',
            labelWidth: 90,
            layout: 'hbox',
            items: [field_FILERECEVIEUNIT_S, {
                xtype: 'button', id: 'btn_filerecevieunit_S', handler: function () {
                    bgsbdw_win(field_FILERECEVIEUNIT_S);
                }, text: '<span class="glyphicon glyphicon-search"></span>', flex: .15, margin: 0
            }]
        })

        //文件申报单位
        var field_FILEDECLAREUNIT_S = Ext.create('Ext.form.field.Text', {
            id: 'FILEDECLAREUNIT_S',
            name: 'FILEDECLAREUNIT_S',
            margin: 0,
            flex: .85,
        })

        var cont_wjsbdw_S = Ext.create('Ext.form.FieldContainer', {
            fieldLabel: '文件申报单位',
            labelWidth: 90,
            layout: 'hbox',
            items: [field_FILEDECLAREUNIT_S, {
                xtype: 'button', id: 'btn_filedeclareunit_S', handler: function () {
                    bgsbdw_win(field_FILEDECLAREUNIT_S);
                }, text: '<span class="glyphicon glyphicon-search"></span>', flex: .15, margin: 0
            }]
        })

        //企业编号
        var field_CODE_S = Ext.create('Ext.form.field.Text', {
            id: 'CODE_S',
            fieldLabel: '企业编号',
            name: 'CODE_S'
        });

        var start_date = Ext.create('Ext.form.field.Date', {
            id: 'start_date',
            format: 'Y-m-d',
            flex:.5
        })
        var end_date = Ext.create('Ext.form.field.Date', {
            id: 'end_date',
            format: 'Y-m-d',
            flex: .5
        })
        //创建时间
        var wt_date = Ext.create('Ext.form.FieldContainer', {
            fieldLabel: '委托时间',
            labelWidth: 60,
            layout: 'hbox',
            columnWidth: .25,
            items: [start_date, end_date]
        })
        var formpanel = Ext.create('Ext.form.Panel', {
            id: 'formpanel',
            renderTo: 'div_form',
            fieldDefaults: {
                margin: '0 5 10 0',
                columnWidth: 0.25
            },
            items: [
            {
                layout: 'column', border: 0, margin: '5 0 0 0', items: [
                  cont_wjjsdw_S, cont_wjsbdw_S, field_CODE_S, wt_date
                ]
            },
            ]
        });
    }
    function render(value, cellmeta, record, rowIndex, columnIndex, store) {
        var rtn = "";
        var dataindex = cellmeta.column.dataIndex;
        switch (dataindex) {
            case "BUSITYPEID":
                var rec = store_busitype.findRecord('CODE', value);
                if (rec) {
                    rtn = rec.get("NAME");
                }
                break;
            case "NEWSTATUS":
                var rec = store_STATUS.findRecord('CODE', value);
                if (rec) {
                    rtn = rec.get("NAME");
                }

        }
        return rtn;
    }

    function Select() {
        Ext.getCmp('pgbar').moveFirst();
    }
    function Reset() {
        Ext.Array.each(Ext.getCmp('formpanel').getForm().getFields().items, function (field) {
            field.reset();
        });
    }
    function Delete() {
        var recs = gridpanel.getSelectionModel().getSelection();
        if (recs.length == 0) {
            Ext.MessageBox.alert('提示', '请选择需要删除的记录！');
            return;
        }

        if (recs[0].data.NEWSTATUS != '5') {
            Ext.MessageBox.alert('提示', '只能删除状态为草稿的记录！');
            return;
        }

        Ext.MessageBox.confirm("提示", "确定要删除所选择的记录吗？", function (btn) {
            if (btn == 'yes') {
                Ext.Ajax.request({
                    url: '/EnterpriseOrder/Delete',
                    params: { id: recs[0].get("ID") },
                    success: function (response, success, option) {
                        var res = Ext.decode(response.responseText);
                        if (res.success) {
                            Ext.MessageBox.alert('提示', '删除成功！');
                            gridpanel.store.reload();
                        }
                        else {
                            Ext.MessageBox.alert('提示', '删除失败！');
                        }
                    }
                });
            }
        });
    }

    function openBatchWin() {
        var recs = gridpanel.getSelectionModel().getSelection();
        if (recs.length == 0) {
            Ext.MessageBox.alert('提示', '请选择需要维护的记录！');
            return;
        }
        var plwhids = "";
        for (var i = 0; i < recs.length; i++) {
            plwhids += recs[i].data.ID + ',';
        }
        var unitcodes = "";
        for (var i = 0; i < recs.length; i++) {
            unitcodes += recs[i].data.UNITCODE + ',';
        }
        plwhids = plwhids.substr(0, plwhids.length - 1);
        unitcodes = unitcodes.substr(0, unitcodes.length - 1);
        opencenterwin("/EnterpriseOrder/BatchMaintain?ids=" + plwhids + "&unitcodes=" + unitcodes, 1200, 800);
    }
</script>

<div class="container">
    <div id="div_form" style="width:100%;"></div>
    <div>
        <div class="btn-group" role="group">
            <button onclick="Open()" type="button" class="btn btn-primary btn-sm"><i class="fa fa-plus fa-fw"></i>&nbsp;添加</button>
            <button onclick="openBatchWin()" type="button" class="btn btn-primary btn-sm"><i class="fa fa-trash-o"></i>&nbsp;批量维护</button>
            <button onclick="Delete()" type="button" class="btn btn-primary btn-sm"><i class="fa fa-trash-o"></i>&nbsp;删除</button>   
        </div>
        <div class="btn-group fr" role="group">
            <button onclick="Select()" class="btn btn-primary btn-sm"><i class="fa fa-search"></i>&nbsp;查询</button>
            <button onclick="Reset()" type="button" class="btn btn-primary btn-sm"><i class="fa fa-refresh"></i>&nbsp;重置</button>
        </div>
    </div>
    <div id="appConId" style="width:100%"></div>
</div>
