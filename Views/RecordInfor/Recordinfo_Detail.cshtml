@{
    ViewBag.Title = "Recordinfo_Detail";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link href="/js/Extjs42/resources/css/ext-all-gray.css" rel="stylesheet" type="text/css" />
<script src="/js/Extjs42/bootstrap.js" type="text/javascript"></script>
<link href="/css/font-awesome/css/font-awesome.min.css" rel="stylesheet" />
<script src="/js/RecordData.js"></script>

<script src="/js/pan.js" type="text/javascript"></script>
<script type="text/javascript">
    var common_data_recordid = [], common_data_unit = [];
    var store_unit;
    var gridpanel_lj, gridpanel_cp, gridpanel_lj_Go, gridpanel_cp_Go;

    Ext.onReady(function () {
        Ext.Ajax.request({
            url: "/RecordInfor/Ini_Record_Data",
            success: function (response, opts) {
                var commondata = Ext.decode(response.responseText);
                common_data_recordid = commondata.recordid;//账册号
                common_data_unit = commondata.unit;//单位

                store_unit = Ext.create('Ext.data.JsonStore', {
                    fields: ['CODE', 'NAME'],
                    data: common_data_unit
                });

                initSearch();
                itemsbind();

                var items = [{ title: '料件', items: [gridpanel_lj] }, { title: '成品', items: [gridpanel_cp] },
                    { title: '料件_申请中', items: [gridpanel_lj_Go] }, { title: '成品_申请中', items: [gridpanel_cp_Go] }];
                var tabpanel = Ext.create('Ext.tab.Panel', {
                    id: 'tabpanel',
                    items: items,
                    renderTo: 'appConId'
                });
            }
        });
    });
    
    function initSearch() {
        //账册号
        var store_recordid = Ext.create('Ext.data.JsonStore', {
            fields: ['CODE', 'NAME'],
            data: common_data_recordid
        });
        var s_combo_recordid = Ext.create('Ext.form.field.ComboBox', {
            id: 's_combo_recordid',
            editable: false,
            store: store_recordid,
            fieldLabel: '账册号',
            labelWidth: 50,
            width: 220,
            displayField: 'NAME',
            name: 'recordid',
            valueField: 'CODE',
            triggerAction: 'all',
            queryMode: 'local'
        });
        //项号
        var field_ITEMNO = Ext.create('Ext.form.field.Text', {
            id: 'field_ITEMNO',
            fieldLabel: '项号',
            labelWidth: 50,
            name: 'ITEMNO',
            flex: .2
        });
        //HS编码
        var field_HSCODE = Ext.create('Ext.form.field.Text', {
            id: 'field_HSCODE',
            fieldLabel: 'HS编码',
            labelWidth: 50,
            name: 'HSCODE'
        });
        //变动状态
        var store_optionstatus = Ext.create('Ext.data.JsonStore', {
            fields: ['CODE', 'NAME'],
            data: optionstatus_js_data
        });
        var s_combo_optionstatus = Ext.create('Ext.form.field.ComboBox', {
            id: 's_combo_optionstatus',
            editable: false,
            store: store_optionstatus,
            fieldLabel: '变动状态',
            labelWidth: 60,
            displayField: 'NAME',
            name: 'OPTIONS',
            valueField: 'CODE',
            triggerAction: 'all',
            queryMode: 'local'
        });
        //申请状态
        var store_status = Ext.create('Ext.data.JsonStore', {
            fields: ['CODE', 'NAME'],
            data: status_js_data_search
        });
        var s_combo_status = Ext.create('Ext.form.field.ComboBox', {
            id: 's_combo_status',
            editable: false,
            store: store_status,
            fieldLabel: '申请状态',
            labelWidth: 60,
            displayField: 'NAME',
            name: 'STATUS',
            valueField: 'CODE',
            triggerAction: 'all',
            queryMode: 'local'
        });
        //非法码比对
        var chk_error = Ext.create('Ext.form.field.Checkbox', {
            id: 'chk_error',
            boxLabel: '非法码比对',
            name: 'error',
            minWidth: 80
        });
        var formpanel = Ext.create('Ext.form.Panel', {
            id: 'formpanel',
            renderTo: 'div_form',
            fieldDefaults: {
                margin: '5'
            },
            items: [
            { layout: 'column', border: 0, margin: '5 0 0 0', items: [s_combo_recordid, field_ITEMNO, field_HSCODE, s_combo_optionstatus, s_combo_status, chk_error] }
            ]
        });
    }
        
    function itemsbind() {
        Ext.regModel('RecrodDetail', {
            fields: ['ID', 'OPTIONS', 'STATUS', 'RECORDINFOID', 'CODE', 'ITEMNO', 'HSCODE', 'ADDITIONALNO', 'ITEMNOATTRIBUTE', 'COMMODITYNAME'
                , 'SPECIFICATIONSMODEL', 'UNIT', 'CUSTOMERCODE', 'CUSTOMERNAME', 'REMARK']
        });

        var store_RecrodDetail_lj = Ext.create('Ext.data.JsonStore', {
            model: 'RecrodDetail',
            pageSize: 20,
            proxy: {
                type: 'ajax',
                url: '/RecordInfor/loadRecordDetail',
                reader: {
                    root: 'rows',
                    type: 'json',
                    totalProperty: 'total'
                }
            },
            autoLoad: true,
            listeners: {
                beforeload: function () {
                    store_RecrodDetail_lj.getProxy().extraParams = {
                        ITEMNOATTRIBUTE: '料件',
                        RECORDINFORID: Ext.getCmp('s_combo_recordid').getValue(), ITEMNO: Ext.getCmp("field_ITEMNO").getValue(), HSCODE: Ext.getCmp('field_HSCODE').getValue(),
                        OPTIONS: Ext.getCmp('s_combo_optionstatus').getValue(), STATUS: Ext.getCmp("s_combo_status").getValue(), ERROR: Ext.getCmp('chk_error').getValue()
                    }
                },
                load: function () {
                    var total_lj = store_RecrodDetail_lj.getProxy().getReader().rawData.total;
                    Ext.getCmp("tabpanel").items.items[0].setTitle("料件(" + total_lj + ")");
                }
            }
        });

        var pgbar_lj = Ext.create('Ext.toolbar.Paging', {
            id: 'pgbar_lj',
            displayMsg: '显示 {0} - {1} 条,共计 {2} 条',
            store: store_RecrodDetail_lj,
            displayInfo: true
        })
        gridpanel_lj = Ext.create('Ext.grid.Panel', {
            store: store_RecrodDetail_lj,
            height: 500,
            selModel: { selType: 'checkboxmodel' },
            bbar: pgbar_lj,
            enableColumnHide: false,
            columns: [
            { xtype: 'rownumberer', width: 35 },
            { header: 'ID', dataIndex: 'ID', hidden: true },
            //{ header: '变动状态', dataIndex: 'OPTIONS', width: 110 },
            //{ header: '申请状态', dataIndex: 'STATUS', width: 110 },
            { header: '账册号', dataIndex: 'CODE', width: 130 },
            { header: '项号', dataIndex: 'ITEMNO', width: 80 },
            { header: 'HS编码', dataIndex: 'HSCODE', width: 130 },
            { header: '附加码', dataIndex: 'ADDITIONALNO', width: 80 },
            { header: '项号属性', dataIndex: 'ITEMNOATTRIBUTE', width: 80 },
            { header: '商品名称', dataIndex: 'COMMODITYNAME', width: 200 },
            { header: '规格型号', dataIndex: 'SPECIFICATIONSMODEL', width: 200 },
            { header: '成交单位', dataIndex: 'UNIT', width: 80, renderer: renderOrder },
            //{ header: '报关行', dataIndex: 'CUSTOMERNAME', width: 150 },
            { header: '备注', dataIndex: 'REMARK', width: 150 }
            ],
            viewConfig: {
                enableTextSelection: true
            },
            forceFit: true
        });
        var store_RecrodDetail_cp = Ext.create('Ext.data.JsonStore', {
            model: 'RecrodDetail',
            pageSize: 20,
            proxy: {
                type: 'ajax',
                url: '/RecordInfor/loadRecordDetail',
                reader: {
                    root: 'rows',
                    type: 'json',
                    totalProperty: 'total'
                }
            },
            autoLoad: true,
            listeners: {
                beforeload: function () {
                    store_RecrodDetail_cp.getProxy().extraParams = {
                        ITEMNOATTRIBUTE: '成品',
                        RECORDINFORID: Ext.getCmp('s_combo_recordid').getValue(), ITEMNO: Ext.getCmp("field_ITEMNO").getValue(), HSCODE: Ext.getCmp('field_HSCODE').getValue(),
                        OPTIONS: Ext.getCmp('s_combo_optionstatus').getValue(), STATUS: Ext.getCmp("s_combo_status").getValue(), ERROR: Ext.getCmp('chk_error').getValue()
                    }
                },
                load: function () {
                    var total_cp = store_RecrodDetail_cp.getProxy().getReader().rawData.total;
                    Ext.getCmp("tabpanel").items.items[1].setTitle("成品(" + total_cp + ")");
                }
            }
        });

        var pgbar_cp = Ext.create('Ext.toolbar.Paging', {
            id: 'pgbar_cp',
            displayMsg: '显示 {0} - {1} 条,共计 {2} 条',
            store: store_RecrodDetail_cp,
            displayInfo: true
        })
        gridpanel_cp = Ext.create('Ext.grid.Panel', {
            store: store_RecrodDetail_cp,
            height: 500,
            selModel: { selType: 'checkboxmodel' },
            bbar: pgbar_cp,
            enableColumnHide: false,
            columns: [
            { xtype: 'rownumberer', width: 35 },
            { header: 'ID', dataIndex: 'ID', hidden: true },
            //{ header: '变动状态', dataIndex: 'OPTIONS', width: 110 },
            //{ header: '申请状态', dataIndex: 'STATUS', width: 110 },
            { header: '账册号', dataIndex: 'CODE', width: 130 },
            { header: '项号', dataIndex: 'ITEMNO', width: 80 },
            { header: 'HS编码', dataIndex: 'HSCODE', width: 130 },
            { header: '附加码', dataIndex: 'ADDITIONALNO', width: 80 },
            { header: '项号属性', dataIndex: 'ITEMNOATTRIBUTE', width: 80 },
            { header: '商品名称', dataIndex: 'COMMODITYNAME', width: 200 },
            { header: '规格型号', dataIndex: 'SPECIFICATIONSMODEL', width: 200 },
            { header: '成交单位', dataIndex: 'UNIT', width: 80, renderer: renderOrder },
            //{ header: '报关行', dataIndex: 'CUSTOMERNAME', width: 150 },
            { header: '备注', dataIndex: 'REMARK', width: 150 }
            ],
            viewConfig: {
                enableTextSelection: true
            },
            forceFit: true
        });

        //====================================================================Go===
        var store_RecrodDetail_lj_Go = Ext.create('Ext.data.JsonStore', {
            model: 'RecrodDetail',
            pageSize: 20,
            proxy: {
                type: 'ajax',
                url: '/RecordInfor/loadRecordDetail_Go',
                reader: {
                    root: 'rows',
                    type: 'json',
                    totalProperty: 'total'
                }
            },
            autoLoad: true,
            listeners: {
                beforeload: function () {
                    store_RecrodDetail_lj_Go.getProxy().extraParams = {
                        ITEMNOATTRIBUTE: '料件',
                        RECORDINFORID: Ext.getCmp('s_combo_recordid').getValue(), ITEMNO: Ext.getCmp("field_ITEMNO").getValue(), HSCODE: Ext.getCmp('field_HSCODE').getValue(),
                        OPTIONS: Ext.getCmp('s_combo_optionstatus').getValue(), STATUS: Ext.getCmp("s_combo_status").getValue(), ERROR: Ext.getCmp('chk_error').getValue()
                    }
                },
                load: function () {
                    var total_lj_Go = store_RecrodDetail_lj_Go.getProxy().getReader().rawData.total;
                    Ext.getCmp("tabpanel").items.items[2].setTitle("料件_申请中(" + total_lj_Go + ")");
                }
            }
        });

        var pgbar_lj_Go = Ext.create('Ext.toolbar.Paging', {
            id: 'pgbar_lj_Go',
            displayMsg: '显示 {0} - {1} 条,共计 {2} 条',
            store: store_RecrodDetail_lj_Go,
            displayInfo: true
        })
        gridpanel_lj_Go = Ext.create('Ext.grid.Panel', {
            store: store_RecrodDetail_lj_Go,
            height: 500,
            selModel: { selType: 'checkboxmodel' },
            bbar: pgbar_lj_Go,
            enableColumnHide: false,
            columns: [
            { xtype: 'rownumberer', width: 35 },
            { header: 'ID', dataIndex: 'ID', hidden: true },
            { header: '变动状态', dataIndex: 'OPTIONS', width: 110 },
            { header: '申请状态', dataIndex: 'STATUS', width: 110 },
            { header: '账册号', dataIndex: 'CODE', width: 130 },
            { header: '项号', dataIndex: 'ITEMNO', width: 80 },
            { header: 'HS编码', dataIndex: 'HSCODE', width: 130 },
            { header: '附加码', dataIndex: 'ADDITIONALNO', width: 80 },
            { header: '项号属性', dataIndex: 'ITEMNOATTRIBUTE', width: 80 },
            { header: '商品名称', dataIndex: 'COMMODITYNAME', width: 200 },
            { header: '规格型号', dataIndex: 'SPECIFICATIONSMODEL', width: 200 },
            { header: '成交单位', dataIndex: 'UNIT', width: 80, renderer: renderOrder },
            { header: '报关行', dataIndex: 'CUSTOMERNAME', width: 150 },
            { header: '备注', dataIndex: 'REMARK', width: 150 }
            ],
            viewConfig: {
                enableTextSelection: true
            },
            forceFit: true
        });
        var store_RecrodDetail_cp_Go = Ext.create('Ext.data.JsonStore', {
            model: 'RecrodDetail',
            pageSize: 20,
            proxy: {
                type: 'ajax',
                url: '/RecordInfor/loadRecordDetail_Go',
                reader: {
                    root: 'rows',
                    type: 'json',
                    totalProperty: 'total'
                }
            },
            autoLoad: true,
            listeners: {
                beforeload: function () {
                    store_RecrodDetail_cp_Go.getProxy().extraParams = {
                        ITEMNOATTRIBUTE: '成品',
                        RECORDINFORID: Ext.getCmp('s_combo_recordid').getValue(), ITEMNO: Ext.getCmp("field_ITEMNO").getValue(), HSCODE: Ext.getCmp('field_HSCODE').getValue(),
                        OPTIONS: Ext.getCmp('s_combo_optionstatus').getValue(), STATUS: Ext.getCmp("s_combo_status").getValue(), ERROR: Ext.getCmp('chk_error').getValue()
                    }
                },
                load: function () {
                    var total_cp_Go = store_RecrodDetail_cp_Go.getProxy().getReader().rawData.total;
                    Ext.getCmp("tabpanel").items.items[3].setTitle("成品_申请中(" + total_cp_Go + ")");
                }
            }
        });

        var pgbar_cp_Go = Ext.create('Ext.toolbar.Paging', {
            id: 'pgbar_cp_Go',
            displayMsg: '显示 {0} - {1} 条,共计 {2} 条',
            store: store_RecrodDetail_cp_Go,
            displayInfo: true
        })
        gridpanel_cp_Go = Ext.create('Ext.grid.Panel', {
            store: store_RecrodDetail_cp_Go,
            height: 500,
            selModel: { selType: 'checkboxmodel' },
            bbar: pgbar_cp_Go,
            enableColumnHide: false,
            columns: [
            { xtype: 'rownumberer', width: 35 },
            { header: 'ID', dataIndex: 'ID', hidden: true },
            { header: '变动状态', dataIndex: 'OPTIONS', width: 110 },
            { header: '申请状态', dataIndex: 'STATUS', width: 110 },
            { header: '账册号', dataIndex: 'CODE', width: 130 },
            { header: '项号', dataIndex: 'ITEMNO', width: 80 },
            { header: 'HS编码', dataIndex: 'HSCODE', width: 130 },
            { header: '附加码', dataIndex: 'ADDITIONALNO', width: 80 },
            { header: '项号属性', dataIndex: 'ITEMNOATTRIBUTE', width: 80 },
            { header: '商品名称', dataIndex: 'COMMODITYNAME', width: 200 },
            { header: '规格型号', dataIndex: 'SPECIFICATIONSMODEL', width: 200 },
            { header: '成交单位', dataIndex: 'UNIT', width: 80, renderer: renderOrder },
            { header: '报关行', dataIndex: 'CUSTOMERNAME', width: 150 },
            { header: '备注', dataIndex: 'REMARK', width: 150 }
            ],
            viewConfig: {
                enableTextSelection: true
            },
            forceFit: true
        });

    }

    function Select() {
        Ext.getCmp('pgbar_lj').moveFirst(); Ext.getCmp('pgbar_cp').moveFirst();
        Ext.getCmp('pgbar_lj_Go').moveFirst(); Ext.getCmp('pgbar_cp_Go').moveFirst();
    }

    function Reset() {
        Ext.each(Ext.getCmp('formpanel').getForm().getFields().items, function (field) {
            field.reset();
        });
    }

</script>

<div class="container">
    <div id="div_form" style="width:100%;height:50px"></div>
    <div>
        <div class="btn-group" role="group">
            <button onclick="" type="button" class="btn btn-primary btn-sm"><i class="fa fa-rss"></i>&nbsp;调阅明细</button>
            <button onclick="" type="button" class="btn btn-primary btn-sm"><i class="fa fa-plus fa-fw"></i>&nbsp;添加</button>
            <button onclick="" type="button" class="btn btn-primary btn-sm dropdown-toggle"><i class="fa fa-pencil-square-o fa-fw"></i>&nbsp;变动申请</button>
            <button onclick="" type="button" class="btn btn-primary btn-sm"><i class="fa fa-trash-o"></i>&nbsp;项号删除申请</button>
            <button onclick="" type="button" class="btn btn-primary btn-sm dropdown-toggle"><i class="fa fa-pencil-square-o fa-fw"></i>&nbsp;修改</button>
            <button onclick="" type="button" class="btn btn-primary btn-sm"><i class="fa fa-trash-o"></i>&nbsp;删除</button>
            <button onclick="" type="button" class="btn btn-primary btn-sm"><i class="fa fa-hand-o-up"></i>&nbsp;提交</button>
            <button onclick="" type="button" class="btn btn-primary btn-sm"><i class="fa fa-print"></i>&nbsp;申请表打印</button>
        </div>
        <div class="btn-group fr" role="group">
            <button onclick="Select()" class="btn btn-primary btn-sm"><i class="fa fa-search"></i>&nbsp;查询</button>
            <button onclick="Reset()" type="button" class="btn btn-primary btn-sm"><i class="fa fa-refresh"></i>&nbsp;重置</button>
            <form id="exportform" name="form" enctype="multipart/form-data" method="post" style="display:inline-block">
                <button onclick="" type="button" id="btn_Export" class="btn btn-primary btn-sm"><i class="fa fa-level-down"></i>&nbsp;导出</button>
            </form>
        </div>
    </div>
    <div id="appConId" style="width:100%;"></div>
</div> 