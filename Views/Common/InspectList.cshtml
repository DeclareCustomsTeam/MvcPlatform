@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link href="/js/Extjs42/resources/css/ext-all-gray.css" rel="stylesheet" type="text/css" />
<script src="/js/Extjs42/bootstrap.js" type="text/javascript"></script>
<link href="/css/font-awesome/css/font-awesome.min.css" rel="stylesheet" />

<script src="/js/pan.js" type="text/javascript"></script>
<script src="/js/commondata.js"></script>
<script src="/js/declaraInspectsearch.js" type="text/javascript"></script>

<script type="text/javascript">
    var combo_1, combo_1_1, combo_2, field_2_1, combo_3, combo_3_1, combo_4, date_4_1, date_4_2;
    var formpanel, pgbar;//因为查询区需要调用对象，故申明为全局
    var showIndex = 1;
    var bjdcode;
    var busitypeid = getQueryString("busitypeid");
    var module = getQueryString("module");

    var common_data_insptype = [{ code: 15, name: '验证' }, { code: 21, name: '预检' }, { code: 24, name: '出境检验检疫' }, { code: 25, name: '核查货证' }, { code: 28, name: '出境验证' }, { code: 13, name: '入境检验检疫' }, { code: 14, name: '流向' }];
    var json_data_insptype = { '15': '验证', '21': '预检', '24': '出境检验检疫', '25': '核查货证', '28': '出境验证', '13': '入境检验检疫', '14': '流向' };
    var json_data_woodpacking = { '9': '无木', '1': '天然木制作的小木箱(架)', '2': '天然木制作的中木箱(架)', '3': '天然木制作的大木箱(架)', '4': '再生木制作的木箱', '5': '天然木制作的木托及板', '6': '再生木制作的木托及板', '7': '其他植物性包装及铺垫材料', '8': '动物性材料的包装及铺垫材料' };
    var json_data_busitype = { '11': '空运进口', '31': '陆运进口', '41': '国内进口', '50': '特殊区域出口', '20': '海运出口', '60': '国内结转', '40': '国内出口', '21': '海运进口', '30': '陆运出口', '10': '空运出口', '51': '特殊区域进口' };
    var role = getQueryString("role");
    var common_data_jydw = [];
    var busitype = "";
    switch (busitypeid) {
        case "10":
            busitype = "空运出口"; break;
        case "11":
            busitype = "空运进口"; break;
        case "20":
            busitype = "海运出口"; break;
        case "21":
            busitype = "海运进口"; break;
        case "30":
            busitype = "陆运出口"; break;
        case "31":
            busitype = "陆运进口"; break;
        case "40-41":
            busitype = "国内"; break;
        case "50-51":
            busitype = "特殊区域"; break;
    }
    Ext.onReady(function () {
        initCompetenceTree(module);//初始化权限菜单
        Ext.Ajax.request({
            url: "/OrderDomestic/Ini_Base_Data",
            params: {
                busitype: busitype
            },
            success: function (response, opts) {
                var commondata = Ext.decode(response.responseText)
                common_data_jydw = commondata.jydw;//经营单位  查询区要用
                initSearch();  //查询区域
                var store = Ext.create('Ext.data.JsonStore', {
                    fields: ['ID', 'PREINSPCODE', 'CODE', 'CUSTOMSSTATUS', 'ISPRINT', 'APPROVALCODE', 'INSPECTIONCODE', 'REPFINISHTIME',
                        'UPCNNAME', 'INSPTYPE', 'ENTRYPORT', 'TRANSTOOL', 'LADINGNO', 'TOTALNO', 'TRADE', 'CONTRACTNO', 'INSPUNITNAME', 'BUSITYPE',
                        'ISFORCELAW', 'WOODPACKINGID', 'GOODSNUM', 'PACKAGETYPENAME', 'DECLTYPENAME', 'ORDERCODE', 'CUSNO', 'FOBPORT', 'FOBPORTNAME'],
                    pageSize: 22,
                    proxy: {
                        type: 'ajax',
                        url: '/Common/LoadInspectionList?role=' + role + "&busitypeid=" + busitypeid,
                        reader: {
                            root: 'rows',
                            type: 'json',
                            totalProperty: 'total'
                        }
                    },
                    autoLoad: true,
                    listeners: {
                        beforeload: function () {
                            store.getProxy().extraParams = {
                                busitypeid: busitypeid,
                                CONDITION1: Ext.getCmp('CONDITION1').getValue(), VALUE1: Ext.getCmp("CONDITION1_1").getValue(),
                                CONDITION2: Ext.getCmp('CONDITION2').getValue(), VALUE2: Ext.getCmp("CONDITION2_1").getValue(),
                                CONDITION3: Ext.getCmp('CONDITION3').getValue(), VALUE3: Ext.getCmp("CONDITION3_1").getValue(),
                                CONDITION4: Ext.getCmp('CONDITION4').getValue(), VALUE4_1: Ext.Date.format(Ext.getCmp("CONDITION4_1").getValue(), 'Y-m-d H:i:s'), VALUE4_2: Ext.Date.format(Ext.getCmp("CONDITION4_2").getValue(), 'Y-m-d H:i:s'),
                            }
                        }
                    }
                })
                pgbar = Ext.create('Ext.toolbar.Paging', {
                    displayMsg: '显示 {0} - {1} 条,共计 {2} 条',
                    store: store,
                    displayInfo: true
                })
                var col_array = [
                    { xtype: 'rownumberer', width: 35 },
                    { header: 'ID', dataIndex: 'ID', width: 110, sortable: true, hidden: true },
                    { header: '国检状态', dataIndex: 'CUSTOMSSTATUS', width: 90, locked: true, renderer: render },
                    { header: '打印标志', dataIndex: 'ISPRINT', width: 70, locked: true, renderer: render },
                    { header: '核放单号', dataIndex: 'APPROVALCODE', width: 160, locked: true },
                    { header: '报检单号', dataIndex: 'INSPECTIONCODE', width: 150, locked: true, renderer: render },
                    { header: '申报完成时间', dataIndex: 'REPFINISHTIME', width: 130 },
                    { header: '业务类型', dataIndex: 'BUSITYPE', width: 100, renderer: render },
                    { header: '收货单位', dataIndex: 'UPCNNAME', width: 170 },
                    { header: '检验类别', dataIndex: 'INSPTYPE', width: 100, renderer: render },
                    { header: '入境口岸', dataIndex: 'ENTRYPORT', width: 80 },
                    { header: '运输工具', dataIndex: 'TRANSNAME', width: 80 },
                    { header: '提运单号', dataIndex: 'LADINGNO', width: 130 },
                    { header: '贸易方式', dataIndex: 'TRADEWAYCODES', width: 80 },
                    { header: '合同号', dataIndex: 'CONTRACTNO', width: 100 },
                    { header: '报检单位', dataIndex: 'INSPUNITNAME', width: 200 },
                    { header: '是否法检', dataIndex: 'ISFORCELAW', width: 60, renderer: render },
                    { header: '木质包装', dataIndex: 'WOODPACKINGID', width: 80, renderer: render },
                    { header: '包装数量', dataIndex: 'GOODSNUM', width: 80 },
                    { header: '包转种类', dataIndex: 'PACKAGETYPENAME', width: 80 },
                    { header: '申报库别', dataIndex: 'DECLTYPENAME', width: 120 },
                    { header: '订单编号', dataIndex: 'ORDERCODE', width: 120 },
                    { header: '客户编号', dataIndex: 'CUSNO', width: 130 }
                ]
                var gridpanel = Ext.create('Ext.grid.Panel', {
                    id: 'inspect_grid',
                    store: store,
                    height: 535,
                    selModel: { selType: 'checkboxmodel' },
                    bbar: pgbar,
                    renderTo: 'appConId',
                    columns: col_array,
                    viewConfig: {
                        enableTextSelection: true
                    }
                })
                //初始化加载海关状态记录
                //设置title
                settitle();
            }
        });
    })
    function render(value, cellmeta, record, rowIndex, columnIndex, store) {
        var rtn = "";
        var dataindex = cellmeta.column.dataIndex;
        if (dataindex == "CUSTOMSSTATUS" && value) {
            rtn = "<div style='color:red;cursor:pointer; text-decoration:underline;' onclick='showinspect_receipt(\"" + record.get("CODE") + "\")'>" + value + "</div>";
        }
        if (dataindex == "ISPRINT") {
            rtn = value == "0" ? "未打印" : "已打印";
        }
        if (dataindex == "INSPECTIONCODE" && value) {
            rtn = "<div style='cursor:pointer; text-decoration:underline;' onclick='showwinwj(\"" + record.get("ID") + "\",\"" + record.get("ORDERCODE") + "\",\"" + record.get("CODE") + "\",TYPE=61)'>" + value + "</div>";
        }
        if (dataindex == "ASSOCIATECODE" && value) {
            rtn = record.get("REPWAYNAME").indexOf("提前") > 0 ? "<div style='cursor:pointer; text-decoration:underline;' onclick='showwinwj(\"" + record.get("ID") + "\",\"" + record.get("ORDERCODE") + "\",\"" + record.get("CODE") + "\",TYPE=63)'>" + value + "</div>" : value;
        }
        if (dataindex == "INSPTYPE") {
            rtn = json_data_insptype[value];
        }
        if (dataindex == "ISFORCELAW") {
            rtn = value == "0" ? "否" : "是";
        }
        if (dataindex == "WOODPACKINGID") {
            rtn = json_data_woodpacking[value];
        }
        if (dataindex == "BUSITYPE") {
            rtn = json_data_busitype[value];
        }
        return rtn;
    }
    //重置
    function Reset() {
        combo_1.setValue("BUSIUNITCODE");
        combo_1_1.setValue("");
        combo_2.setValue("CUSNO");
        field_2_1.setValue("");
        combo_3.setValue("DYBZ");
        combo_3_1.setValue("");
        combo_4.setValue("SUBMITTIME");
        date_4_1.setValue("");
        date_4_2.setValue("");
    }

    //查询
    function Select() {
        pgbar.moveFirst();
    }
    //打开海关状态记录
    function showwin(val) {
        bjdcode = val;
        store_Tradestatus.reload();
        recordViewWin.items.add(gridstatuspanel);
        recordViewWin.doLayout();
        recordViewWin.show();
    }

    //打开调阅信息
    function showwinwj(ID, ORDERCODE, DECLCODE, TYPE) {
        opencenterwin("/Common/FileConsult?ID=" + ID + "&ORDERCODE=" + ORDERCODE + "&DECLCODE=" + DECLCODE + "&TYPE=" + TYPE, 1000, 900);
    }

    //打开调阅信息
    function ClickShowwinwj() {
        var recs = Ext.getCmp('inspect_grid').getSelectionModel().getSelection();
        if (recs.length == 0) {
            Ext.MessageBox.alert('提示', '请选择需要调阅的记录！');
            return;
        }
        opencenterwin("/Common/FileConsult?source=inspect&ORDERCODE=" + recs[0].get("ORDERCODE") + "&BUSITYPE=" + recs[0].get("BUSITYPE") + "&PREINSPCODE=" + recs[0].get("CODE"), 1200, 900);
    }
    //报关单类型title
    function settitle() {
        if (busitypeid == '11') {
            Ext.get('navigator').setHTML('当前位置:空进订单》报检单管理');
        }
        if (busitypeid == '10') {
            Ext.get('navigator').setHTML("当前位置:空出订单》报检单管理");
        }
        if (busitypeid == '21') {
            document.getElementById('ywtype').innerHTML = "当前位置:海进订单》报检单管理";
        }
        if (busitypeid == '20') {
            Ext.get('navigator').setHTML("当前位置:海出订单》报检单管理");
        }
        if (busitypeid == '31') {
            Ext.get('navigator').setHTML("当前位置:陆进订单》报检单管理");
        }
        if (busitypeid == '30') {
            Ext.get('navigator').setHTML("当前位置:陆出订单》报检单管理");
            //gridpanel.columns[7].text = "出口口岸";
            //gridpanel.columns[8].text = "提运单号(运抵编号)";
        }
        if (busitypeid == '40-41') {
            Ext.get('navigator').setHTML("当前位置:国内订单》报检单管理");
        }
        if (busitypeid == '50-51') {
            Ext.get('navigator').setHTML("当前位置:特殊区域订单》报检单管理");
        }
    }
    //显示国检状态回执记录
    function showinspect_receipt(code_bjd) {
        var store_inspect = Ext.create('Ext.data.JsonStore', {
            fields: ['TIMES', 'STATUS'],
            proxy: {
                type: 'ajax',
                url: '/Common/LoadInspectReceipt?bjdcode=' + code_bjd,
                reader: {
                    root: 'rows',
                    type: 'json'
                }
            },
            autoLoad: true
        })
        var grid_inspect = Ext.create('Ext.grid.Panel', {
            title: '国检状态回执',
            store: store_inspect,
            height: 100,
            columns: [
                { xtype: 'rownumberer', width: 35 },
                { header: '时间', dataIndex: 'TIMES', width: 130 },
                { header: '国检状态', dataIndex: 'STATUS', flex: 1 }
            ]
        })
        var win_inspect_status = Ext.create("Ext.window.Window", {
            title: "",
            width: 400,
            height: 400,
            layout: "fit",
            modal: true,
            items: [grid_inspect]
        });
        win_inspect_status.show();
    }
    function MultiPrint() {
        var recs = Ext.getCmp("inspect_grid").getSelectionModel().getSelection();
        if (recs.length == 0) {
            Ext.MessageBox.alert('提示', '请选择需要打印的记录！');
            return;
        }
        var data = "[";
        for (var i = 0; i < recs.length; i++) {
            if (i == recs.length - 1) {
                data += "{BUSITYPE:'" + recs[i].get("BUSITYPE") + "',CODE:'" + recs[i].get("CODE") + "'}]"
            }
            else {
                data += "{BUSITYPE:'" + recs[i].get("BUSITYPE") + "',CODE:'" + recs[i].get("CODE") + "'},"
            }
        }
        opencenterwin("/Common/MultiPrint?source=inspect&data=" + data, 1100, 700);
    }
</script>

<div class="container">
    <div id="div_form" style="width:100%;"></div>
    <div>
        <div class="btn-group" role="group">
            <button type="button" onclick="MultiPrint()" class="btn btn-primary btn-sm"><i class="fa fa-print"></i>&nbsp;批量打印</button>
            <button type="button" onclick="ClickShowwinwj()" class="btn btn-primary btn-sm"><i class="fa fa-rss"></i>&nbsp;调阅</button>
        </div>
        <div class="btn-group fr" role="group">
            <button onclick="Select()" class="btn btn-primary btn-sm"><i class="fa fa-search"></i>&nbsp;查询</button>
            <button onclick="Reset()" type="button" class="btn btn-primary btn-sm"><i class="fa fa-refresh"></i>&nbsp;重置</button>
        </div>
    </div>
    <div id="appConId" style="width:100%;"></div>
</div>