<link href="/js/Extjs42/resources/css/ext-all-gray.css" rel="stylesheet" type="text/css" />
<script src="/js/Extjs42/bootstrap.js" type="text/javascript"></script>
<link href="/css/comme.css" rel="stylesheet" />
<script type="text/javascript">
    var gridUser, store_user, treeModel, treeModelstore, gridStation, store_Station;
    var userid = '';
    Ext.onReady(function () {
    
        Ext.regModel('User', { fields: ['ID', 'NAME', 'REALNAME'] })
        store_user = Ext.create('Ext.data.JsonStore', {
            model: 'User',
            proxy: {
                type: 'ajax',
                url: '/AccountManagement/loaduserInfo',
                reader: {
                    root: 'rows',
                    type: 'json'
                }
            },
            autoLoad: true
        })

        gridUser = Ext.create('Ext.grid.Panel', {
            renderTo: "div_west",
            width: 300,
            height: 500,
            store: store_user,
            columns: [
                { xtype: 'rownumberer', width: 35 },
                { header: 'ID', dataIndex: 'ID', hidden: true },
                { header: '登录名', dataIndex: 'NAME', width: 100 },
                { header: '姓名', dataIndex: 'REALNAME', flex: 1 }
            ],
            listeners: {
                itemclick: function (value, record, item, index, e, eOpts) {
                    treeModelstore.setProxy({
                        type: 'ajax',
                        url: '/AccountManagement/selectModel',
                        reader: 'json'
                    });
                    userid = record.get("ID");
                    var proxys = treeModelstore.proxy;
                    proxys.extraParams.userid = userid;
                    treeModelstore.load();
                }
            }
        })

        var myMask = new Ext.LoadMask(Ext.getBody(), { msg: "数据加载中，请稍等..." });

        //系统模块
        Ext.regModel("SysModelAuth", { fields: ["id", "name", "leaf", "url", "ParentID"] });
        treeModelstore = new Ext.data.TreeStore({
            model: 'SysModelAuth',
            nodeParam: 'id',
            proxy: {
                type: 'ajax',
                url: '/AccountManagement/selectModel',
                reader: 'json'
            },
            root: {
                expanded: true,
                name: '前端模块',
                id: '91a0657f-1939-4528-80aa-91b202a593ab'
            },
            listeners: {
                beforeload: function () {
                    myMask.show();
                },
                load: function (st, rds, opts) {
                    if (myMask) { myMask.hide(); }
                }
            }
        });
        treeModel = Ext.create('Ext.tree.Panel', {
            useArrows: true,
            animate: true,
            renderTo: "div_east",
            rootVisible: false,
            height: 500,
            width: 900,
            store: treeModelstore,
            columns: [
            { text: 'id', dataIndex: 'id', width: 500, hidden: true },
            { text: 'leaf', dataIndex: 'leaf', width: 100, hidden: true },
            { header: '模块名称', xtype: 'treecolumn', text: 'name', dataIndex: 'name', flex: 1 },
            { text: 'ParentID', dataIndex: 'ParentID', width: 100, hidden: true }
            ],
            listeners: {
                itemclick: function (view, rec, node) {
                }
            }
        });
        var label_baseinfo = {
            xtype: 'label',
            html: '<h4 style="margin-top:0px;margin-bottom:0px"><span class="label label-default"><i class="fa fa-chevron-circle-down"></i>&nbsp;权限管理</span></h4>'
        }
        var tbar = Ext.create('Ext.toolbar.Toolbar', {
            renderTo: 'toolbar',
            items: [label_baseinfo, '->', '<button onclick="SaveAuthorization()" type="button" class="btn btn-primary btn-sm"><i class="fa fa-floppy-o"></i>&nbsp;保存</button>']
        })
        //======================联动选择==========================
        /*向上遍历父结点*/
        var nodep = function (node) {
            var bnode = true;
            Ext.Array.each(node.childNodes, function (v) {
                if (!v.data.checked) {
                    bnode = true;
                    return;
                }
            });
            return bnode;
        };
        var parentnode = function (node) {
            if (node.parentNode != null) {
                if (nodep(node.parentNode)) {
                    node.parentNode.set('checked', true);
                } else {
                    node.parentNode.set('checked', false);
                }
                parentnode(node.parentNode);
            }
        };
        /*遍历子结点 选中 与取消选中操作*/
        var chd = function (node, check) {
            node.set('checked', check);
            if (node.isNode) {
                node.eachChild(function (child) {
                    chd(child, check);
                });
            }
        };
        /*treeModel*/

        treeModel.on('checkchange', function (node, checked) {
            setChildChecked(node, checked);
            setParentChecked(node, checked);
        }, treeModel);
        //================================================

    });

    //选择子节点
    function setChildChecked(node, checked) {
        node.expand();
        node.set('checked', checked);
        if (node.hasChildNodes()) {
            node.eachChild(function (child) {
                setChildChecked(child, checked);
            });
        }
    }

    //选择父节点
    function setParentChecked(node, checked) {
        node.set({ checked: checked });
        var parentNode = node.parentNode;
        if (parentNode != null) {
            var flag = false;
            parentNode.eachChild(function (childnode) {
                if (childnode.get('checked')) {
                    flag = true;
                }
            });
            if (checked == false) {
                if (!flag) {
                    setParentChecked(parentNode, checked);
                }
            } else {
                if (flag) {
                    setParentChecked(parentNode, checked);
                }
            }
        }
    }

    function SaveAuthorization() {
        if (userid) {
            var moduleids = "";
            var recs = treeModel.getChecked();
            for (var i = 0; i < recs.length; i++) {
                moduleids += recs[i].data.id + ',';
            }
            var mask = new Ext.LoadMask(Ext.getBody(), { msg: "数据保存中，请稍等..." });
            mask.show();
            Ext.Ajax.request({
                url: '/AccountManagement/AuthorizationSave',
                params: { moduleids: moduleids, userid: userid },
                success: function (option, success, response) {
                    if (option.responseText == '{success:true}') {
                        Ext.MessageBox.alert('提示', '保存成功！');
                    } else {
                        Ext.MessageBox.alert('提示', '保存失败！');
                    }
                    mask.hide();
                }
            })
        }
        else {
            Ext.MessageBox.alert('提示', '请先选择需要授权的账号！');
        }
    }
</script>

<div class="container">
    <div id="appConId" style="width:100%"></div>
    <div id="toolbar"></div>
    <div>
        <div id="div_west" class="fl">
        </div>
        <div id="div_east" class="fl">
        </div>
    </div>
</div>
